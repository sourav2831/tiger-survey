{"version":3,"sources":["CreateServey.js","InputQuestion.js","FirstAnswer.js","ShowAllQuestion.js","TakeServey.js","Landing.js","App.js","serviceWorker.js","index.js"],"names":["CreateServey","props","style","color","InputQuestion","useState","question","setQuestion","answer","setAnswer","Fragment","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","onChange","e","target","value","class","type","onClick","addquestion","remove","id","FirstAnswer","addsubanswer","ShowAllQuestion","data","map","i","className","size","marginLeft","answer1","Checkbox","label","answer2","answer3","answer4","Button","background","options","TakeServey","handlequestion","setState","state","multi1","addsecondanswer","option","addthirdanswer","addforthanswer","update","temp","questions","push","selectedOption","callforsubmit","removeAnswerOption","undefined","handleChange","this","submit","console","log","React","Component","Landing","height","margin","App","flag","setFlag","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4fc11143.chunk.js","sourcesContent":["import React from 'react';\r\nimport PetsSharpIcon from '@material-ui/icons/PetsSharp';\r\n\r\nconst CreateServey=(props)=>{\r\n return(\r\n    <div>\r\n        <h1 style={{ color: \"green\"}}> <PetsSharpIcon /> Survey Tiger</h1>   \r\n    </div>\r\n )\r\n}\r\nexport default CreateServey;","import React, { useState } from 'react';\r\nimport \"./style.css\"\r\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\r\n\r\nconst InputQuestion = (props) => {\r\n  const [question,setQuestion]=useState(\"\")\r\n  const [answer,setAnswer]=useState(\"\")\r\n  return (\r\n      <React.Fragment>\r\n                        <br />\r\n          <InputGroup >\r\n              <InputGroupAddon addonType=\"prepend\">\r\n          <InputGroupText> ?   </InputGroupText>\r\n              </InputGroupAddon>\r\n        <Input placeholder=\"Please Enter the Question\" onChange={(e)=> setQuestion(e.target.value)} />\r\n      </InputGroup>\r\n      <div class=\"bs-example\">\r\n           <form>\r\n            <div class=\"col-sm-12\">\r\n                <div class=\"input-group\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Answer\" onChange={(e) => setAnswer(e.target.value)} />\r\n                    <div class=\"input-group-append\">\r\n                    <span class=\"input-group-text\"  onClick={(e)=>props.addquestion(question, answer)}> + </span>\r\n                    <span class=\"input-group-text\" onClick={()=> {props.remove(props.id)}}> - </span>\r\n            </div>\r\n                </div>\r\n            </div>\r\n             </form>\r\n        </div>\r\n      </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default InputQuestion;","import React,{useState} from \"react\";\r\nconst FirstAnswer=(props)=>{\r\n    const [answer, setAnswer]=useState()\r\n    return (\r\n        <React.Fragment>\r\n            <div class=\"bs-example\">\r\n           <form>\r\n            <div class=\"col-sm-12\">\r\n                <div class=\"input-group\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Answer\" onChange={(e)=> setAnswer(e.target.value)}/>\r\n                    <div class=\"input-group-append\">\r\n                    <span class=\"input-group-text\"  onClick={(e)=>{props.addsubanswer(answer)}}> + </span>\r\n                    <span class=\"input-group-text\" onClick={()=> {props.remove(props.id)}}> - </span>\r\n            </div>\r\n                </div>\r\n            </div>\r\n             </form>\r\n        </div>\r\n        </React.Fragment>\r\n\r\n    )}\r\nexport default FirstAnswer;","import React from 'react';\r\nimport { Checkbox } from 'semantic-ui-react'\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./displayquestion.css\"\r\nconst ShowAllQuestion=(props)=>{\r\n     return (\r\n         <div>{\r\n         props.data.map((i, data)=>{\r\n             return (\r\n                 <div className=\"display\">\r\n                <h2>\r\n                    {props.data[data].question}\r\n                </h2>\r\n                <h4 size=\"lg\" style={{marginLeft: \"0px\"}}>\r\n             {props.data[data].answer1 &&  <Checkbox label={props.data[data].answer1} /> }\r\n                </h4>\r\n                <h4 size=\"lg\" style={{marginLeft: \"0px\"}}>\r\n                {props.data[data].answer2    && <Checkbox label={props.data[data].answer2} /> }\r\n                </h4>\r\n                <h4 size=\"lg\" style={{marginLeft: \"0px\"}}>\r\n             {props.data[data].answer3 && <Checkbox label={props.data[data].answer3} />}   \r\n                </h4>\r\n                <h4 size=\"lg\" style={{marginLeft: \"0px\"}}>\r\n             {props.data[data].answer4 &&   <Checkbox label={props.data[data].answer4} />}   \r\n                </h4>\r\n            </div>  \r\n             )\r\n         })}\r\n         <Button style={{background: \"red\"}}> Confirm </Button>\r\n        </div>\r\n                 \r\n        )}\r\nexport default ShowAllQuestion;","import React from 'react';\r\nimport PetsSharpIcon from '@material-ui/icons/PetsSharp';\r\nimport Select from 'react-select';\r\nimport InputQuestion from './InputQuestion'\r\nimport FirstAnswer from './FirstAnswer'\r\nimport ShowAllQuestion from './ShowAllQuestion'\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst options = [\r\n    { value: \"Multi\", label: 'Multi select' },\r\n    { value: \"Single\", label: 'Single select' },\r\n  ];\r\n  class TakeServey extends React.Component {\r\n    constructor(){\r\n      super()\r\n      this.state = {\r\n        selectedOption: null,\r\n        option: \"\",\r\n        multi1: {},\r\n        questions:[],\r\n        callforsubmit: 0\r\n      };\r\n    }\r\n    handlequestion = (question, answer) =>{\r\n      this.setState({...this.state,  multi1: {\r\n        \"question\": question,\r\n        \"answer1\": answer,\r\n        \"answer2\": 1\r\n      }})\r\n      \r\n    }\r\n    addsecondanswer = (answer)=> {\r\n      if(this.state.option===\"Multi\"){\r\n        this.setState({...this.state,  multi1: {\r\n          ...this.state.multi1,\r\n          \"answer2\": answer,\r\n          \"answer3\": 1\r\n        }})\r\n      }\r\n      else{\r\n        this.setState({...this.state,  multi1: {\r\n          ...this.state.multi1,\r\n          \"answer2\": answer,\r\n          \"submit\": 1\r\n        }})\r\n      }\r\n      \r\n    }\r\n    addthirdanswer = (answer)=> {\r\n      this.setState({\r\n        ...this.state, multi1: {\r\n          ...this.state.multi1, \"answer3\": answer, \"answer4\": 1\r\n        }\r\n      })\r\n    }\r\n    addforthanswer = (answer)=> {\r\n      this.setState({\r\n        ...this.state, multi1: {\r\n          ...this.state.multi1, \"answer4\": answer, \"submit\": 1\r\n        }\r\n      })\r\n      \r\n    }\r\n    \r\n    update=()=>{\r\n       const temp=this.state.questions;\r\n       temp.push(this.state.multi1)\r\n       this.setState({\r\n        selectedOption: null,\r\n        option: \"\",\r\n        multi1: {},\r\n        questions: temp\r\n       })\r\n    }\r\n\r\n    callforsubmit=()=>{\r\n      this.update()\r\n      this.setState({\r\n        ...this.state, \r\n        callforsubmit: 1\r\n      })\r\n    }\r\n\r\n    removeAnswerOption=(answer)=>{\r\n      if(answer===\"answer1\"){\r\n        this.setState({\r\n          ...this.state, \r\n          multi1 : {\r\n            ...this.state.multi1, \"answer1\" : undefined\r\n          }\r\n        }) \r\n      }\r\n      else if(answer===\"answer2\"){\r\n        this.setState({\r\n          ...this.state, \r\n          multi1 : {\r\n            ...this.state.multi1, \"answer2\" : undefined\r\n          }\r\n        }) \r\n      }\r\n      else if(answer===\"answer3\"){\r\n        this.setState({\r\n          ...this.state, \r\n          multi1 : {\r\n            ...this.state.multi1, \"answer3\" : undefined\r\n          }\r\n        }) \r\n      }\r\n      else if (answer===\"answer4\"){\r\n        this.setState({\r\n          ...this.state, \r\n          multi1 : {\r\n            ...this.state.multi1, \"answer4\" : undefined\r\n          }\r\n        }) \r\n      }\r\n     \r\n    }\r\n\r\n    handleChange = selectedOption => {\r\n      this.setState( { ...this.state,selectedOption: selectedOption, option: selectedOption.value });\r\n    };\r\n    render() {\r\n      const { selectedOption } = this.state;\r\n      return (\r\n          <React.Fragment>\r\n        <div>\r\n        <h1 style={{ color: \"green\"}}> <PetsSharpIcon /> Survey Tiger</h1>\r\n        <Select \r\n          value={selectedOption}\r\n          onChange={this.handleChange}\r\n          options={options}\r\n        />\r\n        </div>\r\n\r\n      {this.state.callforsubmit===1 ? <ShowAllQuestion data={this.state.questions}/> :  <div>     \r\n        {this.state.option!==\"\" && <InputQuestion addquestion={this.handlequestion} remove={this.removeAnswerOption} id=\"answer2\"/>}\r\n        {this.state.multi1.answer2!==undefined && <FirstAnswer addsubanswer={this.addsecondanswer} remove={this.removeAnswerOption} id=\"answer2\"/>}\r\n        {this.state.multi1.answer3!==undefined && <FirstAnswer addsubanswer={this.addthirdanswer} remove={this.removeAnswerOption} id=\"answer3\"/>}\r\n        {this.state.multi1.answer4!==undefined && <FirstAnswer addsubanswer={this.addforthanswer} remove={this.removeAnswerOption} id=\"answer4\"/>}\r\n        {this.state.multi1.submit!==undefined  && <Button style={{background: \"red\"}} onClick={()=> this.update()}> Add Question</Button>}\r\n        {this.state.multi1.submit!==undefined && <Button style={{background: \"red\"}}  onClick={ ()=> this.callforsubmit() } > Publish</Button>}</div>}\r\n        {console.log(this.state)}\r\n         \r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\nexport default TakeServey;","import React from 'react';\r\nimport PetsSharpIcon from '@material-ui/icons/PetsSharp';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Landing=(props)=>{\r\n\r\n    return(\r\n        <React.Fragment>\r\n        <h1 style={{ color: \"green\"}}> <PetsSharpIcon /> Survey Tiger</h1>                                           \r\n         <Button style={{ background: \"brown\", size: \"large\", height: \"50px\", margin: \"20px\"}} onClick={()=>props.update(1)}>\r\n          Create Servey\r\n        </Button>\r\n        <br/>\r\n        <Button style={{ background: \"brown\", size: \"large\", height: \"50px\", margin: \"20px\"}} onClick={()=>props.update(2)}>\r\n          Take Servey\r\n        </Button>\r\n        </React.Fragment>\r\n        )\r\n}\r\nexport default Landing;","import React,{useState} from 'react';\nimport './App.css';\nimport CreateServey from './CreateServey';\nimport TakeServey from './TakeServey';\nimport Landing from './Landing'\n\nfunction App() {\n  const [flag, setFlag] = useState(0);\n  const update=(value)=>{\n    setFlag(value)\n  }\n  return (\n    <div className=\"App\">\n      <div>\n      {(flag===0) && <Landing update={update}/>}\n      {flag===2 && <CreateServey/>}\n      {flag===1 && <TakeServey/>}\n      </div>\n    </div>\n\nn}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}